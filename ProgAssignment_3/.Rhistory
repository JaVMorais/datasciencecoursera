Inf/Inf
Inf-Inf
swirl()
x
x[1:10]
x[is.na(x = )]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!us.na(x) & x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect) <- c("foo","bar","norf")
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect("bar")
vect["bar"]
vect[c("foo","bar")]
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim>(my_vector) <- c(4,5)
dim(my_vector) <- c(4,5)
dim(my_vector)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20,nrow=4,ncol=5)
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data z- data.frame(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
swirl()
library(swirl)
swirl()
y[y>=]
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
head(flags)
dim(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,class,character(1))
?tapply(vector, index, function)
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4, replace = TRUE)
sample(1:6,4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,100,0.7)
flips2 <- rbinom(100,1,0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars[,1], y = cars[,2])
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", main = "My Plot")
plot(x = cars$speed, y = cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
?plot
plot(cars,sub = "My Plot Subtitle")
*par
?par
plot(cars, col=2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2
)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
swirl()
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
x
e <- rnorm(10,0,20)
y <- 0.5 + 2x + e
y <- 0.5 + 2*x + e
y
setwd("Dropbox/Coursera/R Programming/ProgAssignment_3/")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
names(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
plot1 <- hist(outcome,11)
plot1 <- hist(outcome[,11])
plot1
?stop
iter <- 12
try(if(iter > 10) stop(\invalid outcome"))
iter <- 12
try(if(iter > 10) stop("\invalid outcome"))
iter <- 12
try(if(iter > 10) stop("invalid outcome"))
iter <- 12
try(if(iter > 10) stop("invalid outcome pip"))
outcome
names(outcome)
unique(outcome$State)
paste(unique(outcome$State),sep = ", ")
paste(unique(outcome$State),collapse = ", ")
paste(unique(outcome$State),collapse = "\", \"")
paste(unique(outcome$State),collapse = "', '" )
c("AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY', 'GU")
v
c
x <- c("AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY', 'GU")
x
c('A')
list_states = c('AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID',
'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO',
'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA',
'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI',
'WY', 'GU')
list_states <- c('AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID',
'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO',
'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA',
'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI',
'WY', 'GU')
list_states
"AL" in list_states
any("AL" == list_states)
any("Az" == list_states)
source("best.R")
?stop
?try
source("best.R")
best("AL")
best("Al")
source("best.R")
best("Al","pneumonia")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
best("AL","pneumonias")
subset?
Q
?subset
data_oocm <- read.csv("outcome-of-care-measures.csv")
subset(data_oocm, subset = data_oocm$State=="AL")
x <- subset(data_oocm, subset = data_oocm$State=="AL")
head(x)
class()
class(x)
names(data_oocm)
source("best.R")
best("AL","pneumonia")
x <- best("AL","pneumonia")
x
source("best.R")
x <- best("AL","pneumonia")
x
head(x)
source("best.R")
x <- best("AL","pneumonia")
head(x)
x
source("best.R")
x <- best("AL","pneumonia")
head(x)
source("best.R")
x <- best("AL","pneumonia")
head(x)
source("best.R")
x <- best("AL","pneumonia")
head(x)
source("best.R")
x <- best("AL","pneumonia")
head(x)
source("best.R")
x <- best("AL","pneumonia")
source("best.R")
x <- best("AL","pneumonia")
head(x)
x <- c(1,2,3)
x[3==c]
x[3==x]
3==x
which(3==x)
x <- c(3,1,2)
which(3==x)
names(data_oocm)[[11]]
x <- names(data_oocm)
"Hospital" == x
x["Hospital"]
x$Hospital
"Hospital" %in% x
"Hospital" %in% x[[1]]
"Hospital" %in% x[[11]]
x
subset(data_oocm, subset = data_oocm$State == "AL", select = c(2,23))
x <- subset(data_oocm, subset = data_oocm$State == "AL", select = c(2,23))
is.na(x[,2])
is.na(as.numeric(x[,2]))
data_oocm <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
x <- subset(data_oocm, subset = data_oocm$State == "AL", select = c(2,23))
is.na(as.numeric(x[,2]))
is.na(suppressWarning(as.numeric(x[,2])))
is.na(suppressWarnings(as.numeric(x[,2])))
!is.na(suppressWarnings(as.numeric(x[,2])))
x[[2]][!is.na(suppressWarnings(as.numeric(x[,2])))]
min(x[[2]][!is.na(suppressWarnings(as.numeric(x[,2])))])
x[,2] <- suppressWarnings(as.numeric(x[,2]))
min(x[[2]][!is.na(suppressWarnings(as.numeric(x[,2])))])
?sort
source("best.R")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("AL","pneumonia")
source("best.R")
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","heart attack")
best("NY","hert attack")
vector(pneumonia=3)
c(11,17,23)
x <- c(11,17,23)
names(x)<-c("ole","ola","oli")
x
x$ole
x["ole"]
x[["ole"]]
data_oocm[[,x[["ole"]]]]
data_oocm[,x[["ole"]]]
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
names(data_oocm)
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","heart attack")
best("NY","hert attack")
best("BB","heart attack")
source("best.R")
best("BB","heart attack")
best("BB","heart attack")
best("MD","pneumonia")
x
tail(x)
tail(x[1])
tail(x[,1])
isTRUE(2==NA)
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital("MN","heart attack", 5000)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
as.integer('a')
is.integer(as.integer('a'))
is.integer(as.integer('a'))&!is.na(as.integer('a'))
is.integer('a')
is.integer(4)
is.wholenumber(4)
round(1)
1==round(1)
NA==round(NA)
isTRUE(NA==round(NA))
isTRUE('NA'==round('NA'))
?check.integer
as.integer(1)
as.integer(NA)
is.integer(1)
x <- c(1,2,3)
x[[as.integer(2)]]
as.integer(x)
is.integer(as.integer(x))
as.integer(1.1)
1.1==whole(1.1)
1==round(1.1)
1.1==round(1.1)
c==whole(c)
length(1)
length('adasdas')
length(NA)
is.numeric('a')
is.numeric(NA)
length(matrix(1:4),ncol=4,nrow=1)
length(matrix(1:4,ncols=4,nrows=1))
length(matrix(1:4,ncol=4,nrow=1))
length(matrix(1:4,ncol=1,nrow=4))
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital("MN","heart attack", 5000)
split(data_oocm,data_oocm$State)
x <- split(data_oocm,data_oocm$State)
x[[1]]
list_states <- c('AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID',
'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO',
'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA',
'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI',
'WY', 'GU')
data.frame(x = list_states, y = rep(NA,length(list_states)))
list_states <- unique(data_oocm$State)
list_states
split(data_oocm,data_oocm$State)
tapply(data_oocm,data_oocm$State,function(dataframe){})
tapply(data_oocm,data_oocm$State,function(dataframe){dataframe[with(dataframe,
order(dataframe[,11],
dataframe$Hospital.Name,
na.last = NA)),]})
x <- split(data_oocm,data_oocm$State)
lapply(x, function(y) min(x[[1]]))
lapply(x, function(y) min(y[11]]))
lapply(x, function(y) min(y[11]))
class(x)
lapply(x, function(y) names(y))
lapply(x, function(y) min(y[,11])
)
names(x)
lapply(x, function(y) y[with(y,
order(y[,col_num_indiv],
y$Hospital.Name,
na.last = NA)),])
lapply(x, function(y) y[with(y,
order(y[,11],
y$Hospital.Name,
na.last = NA)),])
y <- lapply(x, function(y) y[with(y,
order(y[,11],
y$Hospital.Name,
na.last = NA)),])
y[[1,1]]
class(y)
head(y[[1]])
head(y[[1,1,1]])
head(y[[1]][[1,1]])
head(y[[1]]$Hospital.Name)
?which
which(min(1:0))
which(min(1:10))
source("rankall.R")
rankall("pneumonia")
source("rankall.R")
rankall("pneumonia")
tail(rankall("pneumonia","worst"),3)
source("rankall.R")
tail(rankall("pneumonia","worst"),3)
source("rankall.R")
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source("rankall.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
